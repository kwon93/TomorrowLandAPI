plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	//asciidoctor
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.aaa'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//h2
	runtimeOnly 'com.h2database:h2'

	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//mockito
	testImplementation 'org.mockito:mockito-core:4.8.0'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	//AWS S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.528'

	//REST Docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//MySql
	implementation 'mysql:mysql-connector-java:8.0.23'
}


ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}


asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	sources{ //특정 파일만 html로 만들기.
		include("**/index.adoc")
	}
	baseDirFollowsSourceDir() //다른 adoc include 경로 baseDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy{
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}